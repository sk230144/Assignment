{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\New folder\\\\new\\\\src\\\\component\\\\Update.js\",\n  _s = $RefreshSig$();\n// UpdateItemComponent.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateItemComponent = ({\n  itemId\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const handleUpdateItem = async () => {\n    try {\n      // Retrieve the itemId from localStorage\n      const itemId = localStorage.getItem('itemId');\n      await axios.put(`http://localhost:5000/api/items/${itemId}`, {\n        name\n      });\n      // Reset the input field after updating the item\n      setName('');\n      alert('Item updated successfully!');\n    } catch (error) {\n      console.error('Error updating item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateItem,\n      children: \"Update Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateItemComponent, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = UpdateItemComponent;\nexport default UpdateItemComponent;\nvar _c;\n$RefreshReg$(_c, \"UpdateItemComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateItemComponent","itemId","_s","name","setName","handleUpdateItem","localStorage","getItem","put","alert","error","console","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/New folder/new/src/component/Update.js"],"sourcesContent":["// UpdateItemComponent.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UpdateItemComponent = ({ itemId }) => {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleUpdateItem = async () => {\r\n    try {\r\n        // Retrieve the itemId from localStorage\r\n      const itemId = localStorage.getItem('itemId');\r\n      await axios.put(`http://localhost:5000/api/items/${itemId}`, { name });\r\n      // Reset the input field after updating the item\r\n      setName('');\r\n      alert('Item updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      <button onClick={handleUpdateItem}>Update Item</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateItemComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA;MACF,MAAMJ,MAAM,GAAGK,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,MAAMV,KAAK,CAACW,GAAG,CAAE,mCAAkCP,MAAO,EAAC,EAAE;QAAEE;MAAK,CAAC,CAAC;MACtE;MACAC,OAAO,CAAC,EAAE,CAAC;MACXK,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEX,IAAK;MAACY,QAAQ,EAAGC,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EtB,OAAA;MAAQuB,OAAO,EAAEjB,gBAAiB;MAAAO,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtBIF,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAwBzB,eAAeA,mBAAmB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}